var e=Object.create,t=Object.defineProperty,r=Object.defineProperties,n=Object.getOwnPropertyDescriptor,o=Object.getOwnPropertyDescriptors,a=Object.getOwnPropertyNames,i=Object.getOwnPropertySymbols,l=Object.getPrototypeOf,s=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,c=(e,r,n)=>r in e?t(e,r,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[r]=n,p=e=>t(e,"__esModule",{value:!0}),d=r=>((e,r,o)=>{if(r&&"object"==typeof r||"function"==typeof r)for(let i of a(r))s.call(e,i)||"default"===i||t(e,i,{get:()=>r[i],enumerable:!(o=n(r,i))||o.enumerable});return e})(p(t(null!=r?e(l(r)):{},"default",r&&r.__esModule&&"default"in r?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);((e,r)=>{for(var n in p(e),r)t(e,n,{get:r[n],enumerable:!0})})(exports,{fetchRoute:()=>w,getSelfLiftBestRouteMode:()=>b});var m=d(require("../../s6.js")),f=d(require("../../u9.js")),g=d(require("./ny.js")),y=e=>{const{steps:t,distance:n,duration:a}=e.paths[0],l=[];if(t)for(let e=0;e<t.length;e++){const r=t[e].polyline.split(";");for(let e=0;e<r.length;e++)l.push({longitude:parseFloat(r[e].split(",")[0]),latitude:parseFloat(r[e].split(",")[1])})}return p=((e,t)=>{for(var r in t||(t={}))s.call(t,r)&&c(e,r,t[r]);if(i)for(var r of i(t))u.call(t,r)&&c(e,r,t[r]);return e})({},e.paths[0]),d={points:l,kmDistance:(n/1e3).toFixed(2),minDuration:(a/60).toFixed(0)},r(p,o(d));var p,d},w=(e,t=null,r=["walk","car"])=>new Promise(((t,n)=>{r.forEach((e=>{["walk","car"].indexOf(e)<0&&n(new Error("路线类型异常"))})),e&&e.longitude&&e.latitude?t():n(new Error("目的地信息缺失"))})).then((()=>t?t.longitude&&t.latitude?t:Promise.reject(new Error("出发地信息缺失")):f.default.getWxLocation({refresh:!0}).then((e=>e&&e.latitude&&e.longitude?(t={longitude:e.longitude,latitude:e.latitude},e):Promise.reject(new Error("获取当前定位信息异常")))))).then((n=>Promise.all(r.map((t=>new Promise((r=>{const o=new g.default.AMapWX({key:m.AMAP_KEY}),a={walk:"getWalkingRoute",car:"getDrivingRoute"};o[a[t]]?(setTimeout((()=>{r([new Error(`${t}路线规划超时`)])}),3e3),o[a[t]]({origin:`${n.longitude},${n.latitude}`,destination:`${e.longitude},${e.latitude}`,success:e=>{e.paths&&e.paths[0]?r([null,e]):r([new Error(`${t}规划结果异常`)])},fail(e){r([e])}})):r([new Error(`${t}路线方法不存在`)])}))))).then((n=>{if(n[0][0]&&n[1][0])return Promise.reject(new Error("路线规划异常！"));const o={originPoint:t,destPoint:e};return r.forEach(((e,t)=>{const r=n[t];if(r[0])return;const a=y(r[1]);o[e]=a,"walk"===e&&(o.walkingLess10min=a.minDuration<10)})),o})))),b=e=>w(e).then((e=>e.walkingLess10min?"walk":"car"));