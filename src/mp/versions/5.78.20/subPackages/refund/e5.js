var e=Object.create,t=Object.defineProperty,s=Object.getOwnPropertyDescriptor,i=Object.getOwnPropertyNames,r=Object.getPrototypeOf,a=Object.prototype.hasOwnProperty,g=g=>{return((e,r,g)=>{if(r&&"object"==typeof r||"function"==typeof r)for(let l of i(r))a.call(e,l)||"default"===l||t(e,l,{get:()=>r[l],enumerable:!(g=s(r,l))||g.enumerable});return e})((l=t(null!=g?e(r(g)):{},"default",g&&g.__esModule&&"default"in g?{get:()=>g.default,enumerable:!0}:{value:g,enumerable:!0}),t(l,"__esModule",{value:!0})),g);var l},l=g(require("../../uc.js")),o=g(require("../../ob.js")),n=getApp();Component({properties:{wrap:{type:Boolean,value:!1},limit:{type:Number,value:5},size:{type:String,value:"normal"},reverse:{type:Boolean,value:!1},sourceType:{type:Array,value:["camera","album"]},sizeType:{type:Array,value:["compressed","original"]},deleteConfirm:{type:Boolean,value:!0},deleteAfterFail:{type:Boolean,value:!0},customStyle:{type:String,value:""},imgAddStyle:{type:String,value:""},imgAddIcon:{type:String,value:""},textAddStyle:{type:String,value:""},btnAddStyle:{type:String,value:""}},data:{itemList:[],uploading:!1},created(){this.imgList=[],this.imgMap={},this.progress=null,this.keyNum=0},attached(){this.renderList()},ready(){const e=getCurrentPages();this.confirm=e[e.length-1].confirm},methods:{reset(){this.imgList=[],this.imgMap={},this.progress=null,this.setData({itemList:[],uploading:!1}),this.renderList()},renderList(){const{reverse:e}=this.data,t=[...this.imgList,{_type:"add"}];this.setData({itemList:e?t.reverse():t})},toUploadImg(){const{limit:e,sourceType:t,sizeType:s}=this.data;this.choosingFlag=!0,this.triggerUpdate({progress:"start"}),wx.chooseImage({sourceType:t,sizeType:s,count:e-this.imgList.length,success:e=>{const t=(e.tempFilePaths||[]).map((e=>{const t=this.keyNum++,s={tempUrl:e,state:0,remoteUrl:"",key:t};return this.imgMap[t]=s,s}));this.uploadImgInBatch(t),this.imgList=this.imgList.concat(t),this.renderList()},fail:e=>{this.toTriggerOver(),e.errMsg.indexOf("cancel")<0&&n.page().toast("客户端异常")}})},uploadImg(e){return new Promise((t=>{const{[e]:s}=this.imgMap;wx.uploadFile({url:`${l.venusUrl}/extrastorage/new/mallimages`,filePath:s.tempUrl,name:"file",header:{"client-id":"mall-images",token:n.getModule("user").getToken()},formData:{isHttps:`${n.$isProd}`,isImage:"true",maxWidth:2500,maxHeight:2500},success:i=>{let r={};try{r=JSON.parse(i.data)}catch(e){o.log.info("上传图片数据解析异常")}const{data:a,success:g}=r;s?(g?(s.state=1,s.remoteUrl=a.originalLink&&a.originalLink.replace("http://","https://")||"",s.width=a.width||0,s.height=a.height||0):(s.state=-1,this.renderList()),t(g?"":e)):t()},fail:()=>{this.imgMap[e].state=-1,this.renderList(),t(e)}})}))},uploadImgInBatch(e=[]){const t=e.map((e=>(this.imgMap[e.key].state=0,this.uploadImg(e.key))));this.renderList(),Promise.all(t).then((e=>{const t=e.filter((e=>!!e)),s=this.getSuccessList(),i=this.imgList.length;t.length?(this.triggerUpdate({progress:"fail",targetNum:i,successList:s}),this.confirm({message:`所选照片中有${t.length}张照片上传失败，是否重新上传？`,textOK:"重新上传",textCancel:"取消上传",ok:()=>{this.triggerUpdate({progress:"reUpload"}),this.uploadImgInBatch(t.map((e=>this.imgMap[e])))},cancel:()=>{this.imgList=this.imgList.filter((e=>{const s=t.findIndex((t=>t===e.tempUrl))>-1;return s&&delete this.imgMap[e.key],!s})),this.renderList(),this.toTriggerOver()}})):this.toTriggerOver()}))},toRemoveImg(e){let{index:t}=e.currentTarget.dataset;const{reverse:s,deleteConfirm:i}=this.data;s&&(t=this.imgList.length-t),i?this.confirm({message:"确定删除照片吗？",ok:()=>{this.removeImg(t)},cancel:()=>{}}):this.removeImg(t)},removeImg(e){var t;const s=null==(t=this.imgList.splice(e,1))?void 0:t[0];delete this.imgMap[null==s?void 0:s.key],this.toTriggerOver(),this.renderList()},onImgClick(e){const{url:t}=e.currentTarget.dataset,{reverse:s}=this.data;let i=this.imgList.map((e=>e.tempUrl));s&&(i=i.reverse()),wx.previewImage({current:t,urls:i,success:()=>{},fail:()=>{},complete:()=>{}})},getSuccessList(){return this.imgList.reduce(((e,t)=>(t.remoteUrl&&e.push({url:t.remoteUrl,width:t.width,height:t.height}),e)),[])},toTriggerOver(){const e=this.imgList.length,t=this.getSuccessList();this.triggerUpdate({progress:e===t.length?"over":"update",targetNum:e,successList:t})},triggerUpdate(e){this.progress=e.progress,"start"!==this.progress&&"reUpload"!==this.progress||this.setData({uploading:!0}),"fail"===this.progress&&this.imgList.every((e=>0!==e.state))&&this.setData({uploading:!1}),"over"===this.progress&&this.setData({uploading:!1}),this.triggerEvent("progressUpdate",e)}}});