var t=getApp();Component({properties:{show:{type:Boolean},giftSkuList:{type:Array},isRedemption:{type:Boolean},hasExchangeCount:{type:Number},totalExchangeCount:{type:Number},promotionId:{type:Number},unValid:{type:Boolean}},data:{},methods:{handleMaskClick(){this.triggerEvent("close",{source:"close"})},changeCount(t){this.setData({hasExchangeCount:t.detail.hasExchangeCount})},skuSelect(t){const e=1===this.data.totalExchangeCount,{selected:a,skuIndex:o,index:s}=t.detail,n=JSON.parse(JSON.stringify(this.data.giftSkuList));e?n.forEach(((t,e)=>{t.exchangeItems.forEach(((t,n)=>{t.selected=e===o&&n===s&&a}))})):n[o].exchangeItems[s].selected=a,this.setData({giftSkuList:n}),this.filterSelected()},filterSelected(){const t=[];return this.data.giftSkuList.forEach((e=>{e.exchangeItems.forEach((e=>{e.selected&&t.push({skuId:e.skuId})}))})),t},confirmRedemption(){return e=this,a=null,o=function*(){try{yield t.$cart.operateCart({cartOpType:"REDEMPTION",opTarget:{promotionId:this.data.promotionId,opTargets:this.filterSelected()}}),this.triggerEvent("toggleGift",{source:"button"})}catch(t){}},new Promise(((t,s)=>{var n=t=>{try{i(o.next(t))}catch(t){s(t)}},r=t=>{try{i(o.throw(t))}catch(t){s(t)}},i=e=>e.done?t(e.value):Promise.resolve(e.value).then(n,r);i((o=o.apply(e,a)).next())}));var e,a,o}}});